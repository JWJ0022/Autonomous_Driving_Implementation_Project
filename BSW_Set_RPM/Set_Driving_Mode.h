#ifndef PID_DRIVER_SET_DRIVING_MODE_H_
#define PID_DRIVER_SET_DRIVING_MODE_H_

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
#include "IfxStm.h"
#include "Platform_Types.h"
#include "math.h"

#include "BSW_PID/STM_Interrupt.h"
#include "BSW_Car_State_Manager/car_state_manager.h"
/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/
/*********************************************************************************************************************/
typedef enum Direction_T
{
    Left = 0,
    Right = 1
}Direction;

extern float32 CurrentTargetSpeed;

/*********************************************************************************************************************/
/*-------------------------------------------------Data Structures---------------------------------------------------*/
/*********************************************************************************************************************/
 
/*********************************************************************************************************************/
/*--------------------------------------------Private Variables/Constants--------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------Function Prototypes------------------------------------------------*/
/*********************************************************************************************************************/
void Set_Stop(void);
void setTargetSpeed(float32 A_left_motor_speed, float32 B_right_motor_speed);
void UpdateRPMBasedOnSpeed(void);
float32 set_turn(Direction direction, float32 target_angle);
float32 getCurrentSpeed(void);

#endif /* PID_DRIVER_SET_DRIVING_MODE_H_ */
